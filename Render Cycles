import bpy
# Configurar o motor de render para Cycles
bpy.context.scene.render.engine = 'CYCLES'
bpy.context.scene.cycles.device = 'GPU'
# Ajustar as configurações de render
bpy.context.scene.cycles.sample = 512
bpy.context.scene.cycles.use_adaptive_sampling = True
bpy.context.scene.cycles.use_desoising = True
# Ativar filmic para melhorar alcance dinâmico
bpy.context.scene.view_settings.view_transform = 'Filmic'
# Configurar resolução e formato de saída
bpy.context.scene.render.resolution_x = 1920
bpy.context.scene.render.resolution_y = 1080
bpy.context.scene.render.image_settings.file_format = 'PNG'
# Adicionar uma luz ambiente
if "World" in bpy.data.worlds:
    world = bpy.data.worlds["World"]
else:
    world = bpy.data.worlds.new("World")
    bpy.context.scene.world = world
world.use_nodes = True
bg = world.node_tree.nodes.new(type="ShaderNodeBackground")
bg.inputs[1].default_value = 1.0
world_output = world.node_tree.nodes["World Output"]
world.node_tree.links.new(bg.outputs[0], world_output.inputs[0])
# Adicionar uma luz Sun para iluminação realista
light_data = bpy.data.lights.new(name="Sun", type='SUN')
light = bpy.data.objects.new(name="Sun", object_data=light_data)
bpy.context.collection.objects.link(light)
light.location = (4, -4, 10)
light.data.energy = 3.0
# Definir posição da câmera
cam = bpy.data.objects.get("Camera")
if cam:
    cam.location = (3, -3, 2)
    cam.rotation_euler = (1.2, 0, 0.8)
# Renderizar a imagem
bpy.ops.render.render(write_still=True)